/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as BlogIndexImport } from './routes/blog/index'
import { Route as ProductQuickfinderImport } from './routes/product/quickfinder'
import { Route as ProductDeploynestImport } from './routes/product/deploynest'
import { Route as ProductConversioImport } from './routes/product/conversio'
import { Route as ProductSlugImport } from './routes/product/$slug'
import { Route as BlogSlugImport } from './routes/blog/$slug'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const BlogIndexRoute = BlogIndexImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => rootRoute,
} as any)

const ProductQuickfinderRoute = ProductQuickfinderImport.update({
  id: '/product/quickfinder',
  path: '/product/quickfinder',
  getParentRoute: () => rootRoute,
} as any)

const ProductDeploynestRoute = ProductDeploynestImport.update({
  id: '/product/deploynest',
  path: '/product/deploynest',
  getParentRoute: () => rootRoute,
} as any)

const ProductConversioRoute = ProductConversioImport.update({
  id: '/product/conversio',
  path: '/product/conversio',
  getParentRoute: () => rootRoute,
} as any)

const ProductSlugRoute = ProductSlugImport.update({
  id: '/product/$slug',
  path: '/product/$slug',
  getParentRoute: () => rootRoute,
} as any)

const BlogSlugRoute = BlogSlugImport.update({
  id: '/blog/$slug',
  path: '/blog/$slug',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/blog/$slug': {
      id: '/blog/$slug'
      path: '/blog/$slug'
      fullPath: '/blog/$slug'
      preLoaderRoute: typeof BlogSlugImport
      parentRoute: typeof rootRoute
    }
    '/product/$slug': {
      id: '/product/$slug'
      path: '/product/$slug'
      fullPath: '/product/$slug'
      preLoaderRoute: typeof ProductSlugImport
      parentRoute: typeof rootRoute
    }
    '/product/conversio': {
      id: '/product/conversio'
      path: '/product/conversio'
      fullPath: '/product/conversio'
      preLoaderRoute: typeof ProductConversioImport
      parentRoute: typeof rootRoute
    }
    '/product/deploynest': {
      id: '/product/deploynest'
      path: '/product/deploynest'
      fullPath: '/product/deploynest'
      preLoaderRoute: typeof ProductDeploynestImport
      parentRoute: typeof rootRoute
    }
    '/product/quickfinder': {
      id: '/product/quickfinder'
      path: '/product/quickfinder'
      fullPath: '/product/quickfinder'
      preLoaderRoute: typeof ProductQuickfinderImport
      parentRoute: typeof rootRoute
    }
    '/blog/': {
      id: '/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/product/$slug': typeof ProductSlugRoute
  '/product/conversio': typeof ProductConversioRoute
  '/product/deploynest': typeof ProductDeploynestRoute
  '/product/quickfinder': typeof ProductQuickfinderRoute
  '/blog': typeof BlogIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/product/$slug': typeof ProductSlugRoute
  '/product/conversio': typeof ProductConversioRoute
  '/product/deploynest': typeof ProductDeploynestRoute
  '/product/quickfinder': typeof ProductQuickfinderRoute
  '/blog': typeof BlogIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/blog/$slug': typeof BlogSlugRoute
  '/product/$slug': typeof ProductSlugRoute
  '/product/conversio': typeof ProductConversioRoute
  '/product/deploynest': typeof ProductDeploynestRoute
  '/product/quickfinder': typeof ProductQuickfinderRoute
  '/blog/': typeof BlogIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/blog/$slug'
    | '/product/$slug'
    | '/product/conversio'
    | '/product/deploynest'
    | '/product/quickfinder'
    | '/blog'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/blog/$slug'
    | '/product/$slug'
    | '/product/conversio'
    | '/product/deploynest'
    | '/product/quickfinder'
    | '/blog'
  id:
    | '__root__'
    | '/'
    | '/blog/$slug'
    | '/product/$slug'
    | '/product/conversio'
    | '/product/deploynest'
    | '/product/quickfinder'
    | '/blog/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BlogSlugRoute: typeof BlogSlugRoute
  ProductSlugRoute: typeof ProductSlugRoute
  ProductConversioRoute: typeof ProductConversioRoute
  ProductDeploynestRoute: typeof ProductDeploynestRoute
  ProductQuickfinderRoute: typeof ProductQuickfinderRoute
  BlogIndexRoute: typeof BlogIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BlogSlugRoute: BlogSlugRoute,
  ProductSlugRoute: ProductSlugRoute,
  ProductConversioRoute: ProductConversioRoute,
  ProductDeploynestRoute: ProductDeploynestRoute,
  ProductQuickfinderRoute: ProductQuickfinderRoute,
  BlogIndexRoute: BlogIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/blog/$slug",
        "/product/$slug",
        "/product/conversio",
        "/product/deploynest",
        "/product/quickfinder",
        "/blog/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/blog/$slug": {
      "filePath": "blog/$slug.tsx"
    },
    "/product/$slug": {
      "filePath": "product/$slug.tsx"
    },
    "/product/conversio": {
      "filePath": "product/conversio.tsx"
    },
    "/product/deploynest": {
      "filePath": "product/deploynest.tsx"
    },
    "/product/quickfinder": {
      "filePath": "product/quickfinder.tsx"
    },
    "/blog/": {
      "filePath": "blog/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
